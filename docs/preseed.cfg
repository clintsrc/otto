# 1. Script requires UEFI mode. Check with command:
#    $ [ -d /sys/firmware/efi ] && echo "UEFI mode detected" || echo "Legacy BIOS mode detected"
# 2. Place this script in the root of the USB installer

# Select disk to partition
d-i partman-auto/disk string /dev/sda

# Use expert recipe for custom partitions
d-i partman-auto/expert_recipe string                         \
  custom-luks ::                                              \
    512 512 512 fat32                                         \
      $primary{ } $bootable{ }                                \
      method{ efi } format{ }                                 \
      mountpoint{ /boot/efi }                                 \
      .                                                       \
    550 550 550 ext4                                          \
      $primary{ }                                            \
      method{ format } format{ }                             \
      mountpoint{ /boot }                                    \
      .                                                       \
    10000 1000000000 -                                        \
      $primary{ }                                            \
      method{ crypto } format{ } luksformat{ }               \
      luksoptions{ }                                         \
      .                                                       \

# Choose the expert recipe defined above
d-i partman-auto/choose_recipe select custom-luks

# Tell partitioner to use crypto (LUKS) method
d-i partman-auto/method string crypto

# Provide the LUKS passphrase (replace with your secure passphrase, or comment out to prompt)
# d-i partman-crypto/passphrase password yourpassphrase
# d-i partman-crypto/passphrase-again password yourpassphrase

# Wipe any existing LVM volumes on the disk (optional but recommended)
d-i partman-lvm/device_remove_lvm boolean true

# Confirm partitioning and formatting steps automatically
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/choose_partition select finish

# Do not create LVM volumes here; we'll do it later
d-i partman-auto-lvm/grow lv_root boolean false

# Late command to unlock LUKS, create LVM, format and mount volumes, setup crypttab and fstab
d-i preseed/late_command string \
  cryptsetup luksOpen /dev/sda3 luks_disk; \
  vgcreate vg_main /dev/mapper/luks_disk; \
  lvcreate -L 60G -n lv_root vg_main; \
  lvcreate -L 50G -n lv_recovery vg_main; \
  lvcreate -L 16G -n lv_swap vg_main; \
  lvcreate -l 100%FREE -n lv_home vg_main; \
  mkfs.btrfs /dev/vg_main/lv_root; \
  mkfs.ext4 /dev/vg_main/lv_recovery; \
  mkswap /dev/vg_main/lv_swap; \
  mount /dev/vg_main/lv_root /target; \
  mkdir -p /target/mnt/recovery; \
  mount /dev/vg_main/lv_recovery /target/mnt/recovery; \
  mkdir -p /target/home; \
  mount /dev/vg_main/lv_home /target/home; \
  swapon /dev/vg_main/lv_swap; \
  echo "luks_disk UUID=$(blkid -s UUID -o value /dev/sda3) none luks,discard" >> /target/etc/crypttab; \
  echo "/dev/mapper/vg_main-lv_root / btrfs defaults 0 1" >> /target/etc/fstab; \
  echo "/dev/mapper/vg_main-lv_recovery /mnt/recovery ext4 defaults 0 2" >> /target/etc/fstab; \
  echo "/dev/mapper/vg_main-lv_home /home btrfs defaults 0 2" >> /target/etc/fstab; \
  echo "/dev/mapper/vg_main-lv_swap none swap sw 0 0" >> /target/etc/fstab;
